name: Build Frontend (Win32 x64)

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: windows-latest

    defaults:
      run:
        working-directory: kas-frontend-app

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js (with pnpm cache)
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "pnpm"
          # 使用通配，确保匹配子目录里的 pnpm-lock.yaml
          cache-dependency-path: "**/pnpm-lock.yaml"

      - name: Install dependencies (pnpm install)
        run: pnpm install
        working-directory: kas-frontend-app

      - name: Build Electron App (Installer + Portable)
        run: npm run electron:build -- --win nsis portable --x64
        working-directory: kas-frontend-app
        env:
          CI: true

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kas-frontend-win-x64
          path: kas-frontend-app/dist_electron/**

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          files: kas-frontend-app/dist_electron/**
        env:
          # 推荐使用内置 token，或确保你自定义的 token 拥有 repo:statuses, repo_deployment, public_repo, repo 这类权限
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
